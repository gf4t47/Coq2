DIGEST 26e96b5dddae6604b73d431515d5977e
FImp
R1677:1681 SfLib <> <> lib
mod 2147:2150 <> AExp
ind 2267:2270 AExp aexp
constr 2286:2289 AExp ANum
constr 2309:2313 AExp APlus
constr 2342:2347 AExp AMinus
constr 2376:2380 AExp AMult
R2300:2303 Imp <> aexp ind
R2293:2295 Coq.Init.Datatypes <> nat ind
R2333:2336 Imp <> aexp ind
R2325:2328 Imp <> aexp ind
R2317:2320 Imp <> aexp ind
R2367:2370 Imp <> aexp ind
R2359:2362 Imp <> aexp ind
R2351:2354 Imp <> aexp ind
R2400:2403 Imp <> aexp ind
R2392:2395 Imp <> aexp ind
R2384:2387 Imp <> aexp ind
ind 2417:2420 AExp bexp
constr 2436:2440 AExp BTrue
constr 2453:2458 AExp BFalse
constr 2471:2473 AExp BEq
constr 2502:2504 AExp BLe
constr 2533:2536 AExp BNot
constr 2557:2560 AExp BAnd
R2444:2447 Imp <> bexp ind
R2462:2465 Imp <> bexp ind
R2493:2496 Imp <> bexp ind
R2485:2488 Imp AExp aexp ind
R2477:2480 Imp AExp aexp ind
R2524:2527 Imp <> bexp ind
R2516:2519 Imp AExp aexp ind
R2508:2511 Imp AExp aexp ind
R2548:2551 Imp <> bexp ind
R2540:2543 Imp <> bexp ind
R2580:2583 Imp <> bexp ind
R2572:2575 Imp <> bexp ind
R2564:2567 Imp <> bexp ind
def 5189:5193 AExp aeval
R5200:5203 Imp AExp aexp ind
R5208:5210 Coq.Init.Datatypes <> nat ind
R5223:5223 Imp <> a var
R5234:5237 Imp AExp ANum constr
R5250:5254 Imp AExp APlus constr
R5265:5265 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5274:5278 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5287:5287 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5266:5270 Imp <> aeval def
R5279:5283 Imp <> aeval def
R5293:5298 Imp AExp AMinus constr
R5310:5310 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5319:5323 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5332:5332 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5311:5315 Imp <> aeval def
R5324:5328 Imp <> aeval def
R5338:5342 Imp AExp AMult constr
R5353:5353 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5362:5366 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5375:5375 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5354:5358 Imp <> aeval def
R5367:5371 Imp <> aeval def
def 5393:5403 AExp test_aeval1
R5439:5441 Coq.Init.Logic <> :type_scope:x_'='_x not
R5408:5412 Imp AExp aeval def
R5415:5419 Imp AExp APlus constr
R5431:5434 Imp AExp ANum constr
R5422:5425 Imp AExp ANum constr
def 5560:5564 AExp beval
R5571:5574 Imp AExp bexp ind
R5579:5582 Coq.Init.Datatypes <> bool ind
R5595:5595 Imp <> b var
R5606:5610 Imp AExp BTrue constr
R5621:5624 Coq.Init.Datatypes <> true constr
R5630:5635 Imp AExp BFalse constr
R5645:5649 Coq.Init.Datatypes <> false constr
R5655:5657 Imp AExp BEq constr
R5670:5676 Coq.Arith.EqNat <> beq_nat def
R5690:5694 Imp AExp aeval def
R5679:5683 Imp AExp aeval def
R5704:5706 Imp AExp BLe constr
R5719:5725 SfLib <> ble_nat def
R5739:5743 Imp AExp aeval def
R5728:5732 Imp AExp aeval def
R5753:5756 Imp AExp BNot constr
R5768:5771 Coq.Init.Datatypes <> negb def
R5774:5778 Imp <> beval def
R5788:5791 Imp AExp BAnd constr
R5803:5806 Coq.Init.Datatypes <> andb def
R5820:5824 Imp <> beval def
R5809:5813 Imp <> beval def
def 6223:6236 AExp optimize_0plus
R6241:6244 Imp AExp aexp ind
R6249:6252 Imp AExp aexp ind
R6265:6265 Imp <> a var
R6276:6279 Imp AExp ANum constr
R6292:6295 Imp AExp ANum constr
R6303:6307 Imp AExp APlus constr
R6310:6313 Imp AExp ANum constr
R6330:6343 Imp <> optimize_0plus def
R6352:6356 Imp AExp APlus constr
R6373:6377 Imp AExp APlus constr
R6400:6413 Imp <> optimize_0plus def
R6380:6393 Imp <> optimize_0plus def
R6423:6428 Imp AExp AMinus constr
R6445:6450 Imp AExp AMinus constr
R6473:6486 Imp <> optimize_0plus def
R6453:6466 Imp <> optimize_0plus def
R6496:6500 Imp AExp AMult constr
R6517:6521 Imp AExp AMult constr
R6544:6557 Imp <> optimize_0plus def
R6524:6537 Imp <> optimize_0plus def
def 6710:6728 AExp test_optimize_0plus
R6862:6866 Coq.Init.Logic <> :type_scope:x_'='_x not
R6733:6746 Imp AExp optimize_0plus def
R6749:6753 Imp AExp APlus constr
R6789:6793 Imp AExp APlus constr
R6836:6840 Imp AExp APlus constr
R6852:6855 Imp AExp ANum constr
R6843:6846 Imp AExp ANum constr
R6796:6799 Imp AExp ANum constr
R6756:6759 Imp AExp ANum constr
R6867:6871 Imp AExp APlus constr
R6883:6886 Imp AExp ANum constr
R6874:6877 Imp AExp ANum constr
prf 7106:7125 AExp optimize_0plus_sound
R7164:7166 Coq.Init.Logic <> :type_scope:x_'='_x not
R7140:7144 Imp AExp aeval def
R7147:7160 Imp AExp optimize_0plus def
R7162:7162 Imp <> a var
R7167:7171 Imp AExp aeval def
R7173:7173 Imp <> a var
prf 9279:9283 AExp ev100
R9287:9288 SfLib <> ev ind
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9417:9420 SfLib <> ev_0 constr
R9417:9420 SfLib <> ev_0 constr
prf 9648:9653 AExp ev100'
R9657:9658 SfLib <> ev ind
R9688:9691 SfLib <> ev_0 constr
R9688:9691 SfLib <> ev_0 constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9769:9772 SfLib <> ev_0 constr
R9769:9772 SfLib <> ev_0 constr
prf 10423:10428 AExp silly1
R10451:10453 Coq.Init.Logic <> :type_scope:x_'='_x not
R10443:10447 Imp AExp aeval def
R10449:10450 Imp <> ae var
R10454:10458 Imp AExp aeval def
R10460:10461 Imp <> ae var
prf 10537:10542 AExp silly2
R10570:10570 Imp <> P var
R10565:10565 Imp <> P var
prf 11286:11288 AExp foo
R11313:11315 Coq.Init.Logic <> :type_scope:x_'='_x not
R11302:11308 SfLib <> ble_nat def
R11312:11312 Imp <> n var
R11316:11319 Coq.Init.Datatypes <> true constr
prf 11566:11569 AExp foo'
R11594:11596 Coq.Init.Logic <> :type_scope:x_'='_x not
R11583:11589 SfLib <> ble_nat def
R11593:11593 Imp <> n var
R11597:11600 Coq.Init.Datatypes <> true constr
prf 11931:11951 AExp optimize_0plus_sound'
R11990:11992 Coq.Init.Logic <> :type_scope:x_'='_x not
R11966:11970 Imp AExp aeval def
R11973:11986 Imp AExp optimize_0plus def
R11988:11988 Imp <> a var
R11993:11997 Imp AExp aeval def
R11999:11999 Imp <> a var
prf 14779:14800 AExp optimize_0plus_sound''
R14839:14841 Coq.Init.Logic <> :type_scope:x_'='_x not
R14815:14819 Imp AExp aeval def
R14822:14835 Imp AExp optimize_0plus def
R14837:14837 Imp <> a var
R14842:14846 Imp AExp aeval def
R14848:14848 Imp <> a var
prf 19375:19397 AExp optimize_0plus_sound'''
R19436:19438 Coq.Init.Logic <> :type_scope:x_'='_x not
R19412:19416 Imp AExp aeval def
R19419:19432 Imp AExp optimize_0plus def
R19434:19434 Imp <> a var
R19439:19443 Imp AExp aeval def
R19445:19445 Imp <> a var
def 20680:20695 AExp optimize_0plus_b
R20702:20705 Imp AExp bexp ind
R20710:20713 Imp AExp bexp ind
R20739:20743 SfLib <> admit prfax
prf 20756:20777 AExp optimize_0plus_b_sound
R20819:20821 Coq.Init.Logic <> :type_scope:x_'='_x not
R20793:20797 Imp AExp beval def
R20800:20815 Imp AExp optimize_0plus_b def
R20817:20817 Imp <> b var
R20822:20826 Imp AExp beval def
R20828:20828 Imp <> b var
def 21970:21993 AExp silly_presburger_example
R22053:22056 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22052:22052 Imp <> m var
R22057:22057 Imp <> p var
R22029:22032 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22020:22023 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22016:22018 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22015:22015 Imp <> m var
R22019:22019 Imp <> n var
R22025:22027 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22024:22024 Imp <> n var
R22028:22028 Imp <> o var
R22038:22040 Coq.Init.Logic <> :type_scope:x_'='_x not
R22034:22036 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22033:22033 Imp <> o var
R22042:22044 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22041:22041 Imp <> p var
mod 24134:24149 <> AExp.aevalR_first_try
ind 24163:24168 AExp.aevalR_first_try aevalR
constr 24199:24204 AExp.aevalR_first_try E_ANum
constr 24254:24260 AExp.aevalR_first_try E_APlus
constr 24384:24391 AExp.aevalR_first_try E_AMinus
constr 24515:24521 AExp.aevalR_first_try E_AMult
R24180:24182 Coq.Init.Datatypes <> nat ind
R24172:24175 Imp AExp.aevalR_first_try aexp ind
R24220:24222 Coq.Init.Datatypes <> nat ind
R24232:24237 Imp <> aevalR ind
R24248:24248 Imp <> n var
R24240:24243 Imp AExp.aevalR_first_try ANum constr
R24245:24245 Imp <> n var
R24279:24282 Imp AExp.aevalR_first_try aexp ind
R24293:24295 Coq.Init.Datatypes <> nat ind
R24349:24354 Imp <> aevalR ind
R24373:24375 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24371:24372 Imp <> n1 var
R24376:24377 Imp <> n2 var
R24357:24361 Imp AExp.aevalR_first_try APlus constr
R24366:24367 Imp <> e2 var
R24363:24364 Imp <> e1 var
R24327:24332 Imp <> aevalR ind
R24337:24338 Imp <> n2 var
R24334:24335 Imp <> e2 var
R24305:24310 Imp <> aevalR ind
R24315:24316 Imp <> n1 var
R24312:24313 Imp <> e1 var
R24409:24412 Imp AExp.aevalR_first_try aexp ind
R24423:24425 Coq.Init.Datatypes <> nat ind
R24479:24484 Imp <> aevalR ind
R24504:24506 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R24502:24503 Imp <> n1 var
R24507:24508 Imp <> n2 var
R24487:24492 Imp AExp.aevalR_first_try AMinus constr
R24497:24498 Imp <> e2 var
R24494:24495 Imp <> e1 var
R24457:24462 Imp <> aevalR ind
R24467:24468 Imp <> n2 var
R24464:24465 Imp <> e2 var
R24435:24440 Imp <> aevalR ind
R24445:24446 Imp <> n1 var
R24442:24443 Imp <> e1 var
R24540:24543 Imp AExp.aevalR_first_try aexp ind
R24554:24556 Coq.Init.Datatypes <> nat ind
R24610:24615 Imp <> aevalR ind
R24634:24636 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24632:24633 Imp <> n1 var
R24637:24638 Imp <> n2 var
R24618:24622 Imp AExp.aevalR_first_try AMult constr
R24627:24628 Imp <> e2 var
R24624:24625 Imp <> e1 var
R24588:24593 Imp <> aevalR ind
R24598:24599 Imp <> n2 var
R24595:24596 Imp <> e2 var
R24566:24571 Imp <> aevalR ind
R24576:24577 Imp <> n1 var
R24573:24574 Imp <> e1 var
R25197:25202 Imp AExp.aevalR_first_try aevalR ind
not 25182 AExp.aevalR_first_try :type_scope:x_'||'_x
R25228:25243 Imp AExp.aevalR_first_try <> mod
ind 25747:25752 AExp aevalR
constr 25783:25788 AExp E_ANum
constr 25832:25838 AExp E_APlus
constr 25943:25950 AExp E_AMinus
constr 26056:26062 AExp E_AMult
R25764:25766 Coq.Init.Datatypes <> nat ind
R25756:25759 Imp AExp aexp ind
R26188:26193 Imp <> aevalR ind
R25802:25804 Coq.Init.Datatypes <> nat ind
R25814:25814 Imp AExp :type_scope:x_'||'_x not
R25821:25825 Imp AExp :type_scope:x_'||'_x not
R25815:25818 Imp AExp ANum constr
R25820:25820 Imp <> n var
R25826:25826 Imp <> n var
R25857:25860 Imp AExp aexp ind
R25872:25874 Coq.Init.Datatypes <> nat ind
R25912:25912 Imp AExp :type_scope:x_'||'_x not
R25924:25929 Imp AExp :type_scope:x_'||'_x not
R25937:25937 Imp AExp :type_scope:x_'||'_x not
R25913:25917 Imp AExp APlus constr
R25922:25923 Imp <> e2 var
R25919:25920 Imp <> e1 var
R25932:25934 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25930:25931 Imp <> n1 var
R25935:25936 Imp <> n2 var
R25901:25904 Imp AExp :type_scope:x_'||'_x not
R25899:25900 Imp <> e2 var
R25905:25906 Imp <> n2 var
R25887:25890 Imp AExp :type_scope:x_'||'_x not
R25885:25886 Imp <> e1 var
R25891:25892 Imp <> n1 var
R25969:25972 Imp AExp aexp ind
R25984:25986 Coq.Init.Datatypes <> nat ind
R26024:26024 Imp AExp :type_scope:x_'||'_x not
R26037:26042 Imp AExp :type_scope:x_'||'_x not
R26050:26050 Imp AExp :type_scope:x_'||'_x not
R26025:26030 Imp AExp AMinus constr
R26035:26036 Imp <> e2 var
R26032:26033 Imp <> e1 var
R26045:26047 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R26043:26044 Imp <> n1 var
R26048:26049 Imp <> n2 var
R26013:26016 Imp AExp :type_scope:x_'||'_x not
R26011:26012 Imp <> e2 var
R26017:26018 Imp <> n2 var
R25999:26002 Imp AExp :type_scope:x_'||'_x not
R25997:25998 Imp <> e1 var
R26003:26004 Imp <> n1 var
R26082:26085 Imp AExp aexp ind
R26097:26099 Coq.Init.Datatypes <> nat ind
R26137:26137 Imp AExp :type_scope:x_'||'_x not
R26149:26154 Imp AExp :type_scope:x_'||'_x not
R26162:26162 Imp AExp :type_scope:x_'||'_x not
R26138:26142 Imp AExp AMult constr
R26147:26148 Imp <> e2 var
R26144:26145 Imp <> e1 var
R26157:26159 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26155:26156 Imp <> n1 var
R26160:26161 Imp <> n2 var
R26126:26129 Imp AExp :type_scope:x_'||'_x not
R26124:26125 Imp <> e2 var
R26130:26131 Imp <> n2 var
R26112:26115 Imp AExp :type_scope:x_'||'_x not
R26110:26111 Imp <> e1 var
R26116:26117 Imp <> n1 var
R26188:26193 Imp AExp aevalR ind
not 26173 AExp :type_scope:x_'||'_x
prf 29238:29253 AExp aeval_iff_aevalR
R29271:29271 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29278:29283 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29273:29276 Imp AExp :type_scope:x_'||'_x not
R29272:29272 Imp <> a var
R29277:29277 Imp <> n var
R29291:29293 Coq.Init.Logic <> :type_scope:x_'='_x not
R29284:29288 Imp AExp aeval def
R29290:29290 Imp <> a var
R29294:29294 Imp <> n var
R29783:29788 Imp AExp E_ANum constr
R29783:29788 Imp AExp E_ANum constr
R29820:29826 Imp AExp E_APlus constr
R29820:29826 Imp AExp E_APlus constr
R29921:29928 Imp AExp E_AMinus constr
R29921:29928 Imp AExp E_AMinus constr
R30022:30028 Imp AExp E_AMult constr
R30022:30028 Imp AExp E_AMult constr
prf 30573:30589 AExp aeval_iff_aevalR'
R30607:30607 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30614:30619 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30609:30612 Imp AExp :type_scope:x_'||'_x not
R30608:30608 Imp <> a var
R30613:30613 Imp <> n var
R30627:30629 Coq.Init.Logic <> :type_scope:x_'='_x not
R30620:30624 Imp AExp aeval def
R30626:30626 Imp <> a var
R30630:30630 Imp <> n var
R31095:31098 Imp AExp <> mod
mod 31922:31936 <> aevalR_division
ind 32075:32078 aevalR_division aexp
constr 32094:32097 aevalR_division ANum
constr 32117:32121 aevalR_division APlus
constr 32150:32155 aevalR_division AMinus
constr 32184:32188 aevalR_division AMult
constr 32217:32220 aevalR_division ADiv
R32108:32111 Imp <> aexp ind
R32101:32103 Coq.Init.Datatypes <> nat ind
R32141:32144 Imp <> aexp ind
R32133:32136 Imp <> aexp ind
R32125:32128 Imp <> aexp ind
R32175:32178 Imp <> aexp ind
R32167:32170 Imp <> aexp ind
R32159:32162 Imp <> aexp ind
R32208:32211 Imp <> aexp ind
R32200:32203 Imp <> aexp ind
R32192:32195 Imp <> aexp ind
R32240:32243 Imp <> aexp ind
R32232:32235 Imp <> aexp ind
R32224:32227 Imp <> aexp ind
ind 32500:32505 aevalR_division aevalR
constr 32536:32541 aevalR_division E_ANum
constr 32585:32591 aevalR_division E_APlus
constr 32696:32703 aevalR_division E_AMinus
constr 32809:32815 aevalR_division E_AMult
constr 32921:32926 aevalR_division E_ADiv
R32517:32519 Coq.Init.Datatypes <> nat ind
R32509:32512 Imp aevalR_division aexp ind
R33065:33070 Imp <> aevalR ind
R32555:32557 Coq.Init.Datatypes <> nat ind
R32567:32567 Imp aevalR_division :type_scope:x_'||'_x not
R32574:32578 Imp aevalR_division :type_scope:x_'||'_x not
R32568:32571 Imp aevalR_division ANum constr
R32573:32573 Imp <> n var
R32579:32579 Imp <> n var
R32610:32613 Imp aevalR_division aexp ind
R32625:32627 Coq.Init.Datatypes <> nat ind
R32665:32665 Imp aevalR_division :type_scope:x_'||'_x not
R32677:32682 Imp aevalR_division :type_scope:x_'||'_x not
R32690:32690 Imp aevalR_division :type_scope:x_'||'_x not
R32666:32670 Imp aevalR_division APlus constr
R32675:32676 Imp <> a2 var
R32672:32673 Imp <> a1 var
R32685:32687 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32683:32684 Imp <> n1 var
R32688:32689 Imp <> n2 var
R32654:32657 Imp aevalR_division :type_scope:x_'||'_x not
R32652:32653 Imp <> a2 var
R32658:32659 Imp <> n2 var
R32640:32643 Imp aevalR_division :type_scope:x_'||'_x not
R32638:32639 Imp <> a1 var
R32644:32645 Imp <> n1 var
R32722:32725 Imp aevalR_division aexp ind
R32737:32739 Coq.Init.Datatypes <> nat ind
R32777:32777 Imp aevalR_division :type_scope:x_'||'_x not
R32790:32795 Imp aevalR_division :type_scope:x_'||'_x not
R32803:32803 Imp aevalR_division :type_scope:x_'||'_x not
R32778:32783 Imp aevalR_division AMinus constr
R32788:32789 Imp <> a2 var
R32785:32786 Imp <> a1 var
R32798:32800 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R32796:32797 Imp <> n1 var
R32801:32802 Imp <> n2 var
R32766:32769 Imp aevalR_division :type_scope:x_'||'_x not
R32764:32765 Imp <> a2 var
R32770:32771 Imp <> n2 var
R32752:32755 Imp aevalR_division :type_scope:x_'||'_x not
R32750:32751 Imp <> a1 var
R32756:32757 Imp <> n1 var
R32835:32838 Imp aevalR_division aexp ind
R32850:32852 Coq.Init.Datatypes <> nat ind
R32890:32890 Imp aevalR_division :type_scope:x_'||'_x not
R32902:32907 Imp aevalR_division :type_scope:x_'||'_x not
R32915:32915 Imp aevalR_division :type_scope:x_'||'_x not
R32891:32895 Imp aevalR_division AMult constr
R32900:32901 Imp <> a2 var
R32897:32898 Imp <> a1 var
R32910:32912 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R32908:32909 Imp <> n1 var
R32913:32914 Imp <> n2 var
R32879:32882 Imp aevalR_division :type_scope:x_'||'_x not
R32877:32878 Imp <> a2 var
R32883:32884 Imp <> n2 var
R32865:32868 Imp aevalR_division :type_scope:x_'||'_x not
R32863:32864 Imp <> a1 var
R32869:32870 Imp <> n1 var
R32946:32949 Imp aevalR_division aexp ind
R32963:32965 Coq.Init.Datatypes <> nat ind
R33024:33024 Imp aevalR_division :type_scope:x_'||'_x not
R33035:33039 Imp aevalR_division :type_scope:x_'||'_x not
R33025:33028 Imp aevalR_division ADiv constr
R33033:33034 Imp <> a2 var
R33030:33031 Imp <> a1 var
R33040:33041 Imp <> n3 var
R33014:33016 Coq.Init.Logic <> :type_scope:x_'='_x not
R33004:33007 Coq.Init.Peano <> mult def
R33012:33013 Imp <> n3 var
R33009:33010 Imp <> n2 var
R33017:33018 Imp <> n1 var
R32992:32995 Imp aevalR_division :type_scope:x_'||'_x not
R32990:32991 Imp <> a2 var
R32996:32997 Imp <> n2 var
R32978:32981 Imp aevalR_division :type_scope:x_'||'_x not
R32976:32977 Imp <> a1 var
R32982:32983 Imp <> n1 var
R33065:33070 Imp aevalR_division aevalR ind
not 33050 aevalR_division :type_scope:x_'||'_x
R33096:33110 Imp aevalR_division <> mod
mod 33120:33134 <> aevalR_extended
ind 33273:33276 aevalR_extended aexp
constr 33292:33295 aevalR_extended AAny
constr 33342:33345 aevalR_extended ANum
constr 33365:33369 aevalR_extended APlus
constr 33398:33403 aevalR_extended AMinus
constr 33432:33436 aevalR_extended AMult
R33300:33303 Imp <> aexp ind
R33356:33359 Imp <> aexp ind
R33349:33351 Coq.Init.Datatypes <> nat ind
R33389:33392 Imp <> aexp ind
R33381:33384 Imp <> aexp ind
R33373:33376 Imp <> aexp ind
R33423:33426 Imp <> aexp ind
R33415:33418 Imp <> aexp ind
R33407:33410 Imp <> aexp ind
R33456:33459 Imp <> aexp ind
R33448:33451 Imp <> aexp ind
R33440:33443 Imp <> aexp ind
ind 33652:33657 aevalR_extended aevalR
constr 33688:33692 aevalR_extended E_Any
constr 33763:33768 aevalR_extended E_ANum
constr 33812:33818 aevalR_extended E_APlus
constr 33923:33930 aevalR_extended E_AMinus
constr 34036:34042 aevalR_extended E_AMult
R33669:33671 Coq.Init.Datatypes <> nat ind
R33661:33664 Imp aevalR_extended aexp ind
R34166:34171 Imp <> aevalR ind
R33706:33708 Coq.Init.Datatypes <> nat ind
R33722:33725 Imp aevalR_extended :type_scope:x_'||'_x not
R33718:33721 Imp aevalR_extended AAny constr
R33726:33726 Imp <> n var
R33782:33784 Coq.Init.Datatypes <> nat ind
R33794:33794 Imp aevalR_extended :type_scope:x_'||'_x not
R33801:33805 Imp aevalR_extended :type_scope:x_'||'_x not
R33795:33798 Imp aevalR_extended ANum constr
R33800:33800 Imp <> n var
R33806:33806 Imp <> n var
R33837:33840 Imp aevalR_extended aexp ind
R33852:33854 Coq.Init.Datatypes <> nat ind
R33892:33892 Imp aevalR_extended :type_scope:x_'||'_x not
R33904:33909 Imp aevalR_extended :type_scope:x_'||'_x not
R33917:33917 Imp aevalR_extended :type_scope:x_'||'_x not
R33893:33897 Imp aevalR_extended APlus constr
R33902:33903 Imp <> a2 var
R33899:33900 Imp <> a1 var
R33912:33914 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33910:33911 Imp <> n1 var
R33915:33916 Imp <> n2 var
R33881:33884 Imp aevalR_extended :type_scope:x_'||'_x not
R33879:33880 Imp <> a2 var
R33885:33886 Imp <> n2 var
R33867:33870 Imp aevalR_extended :type_scope:x_'||'_x not
R33865:33866 Imp <> a1 var
R33871:33872 Imp <> n1 var
R33949:33952 Imp aevalR_extended aexp ind
R33964:33966 Coq.Init.Datatypes <> nat ind
R34004:34004 Imp aevalR_extended :type_scope:x_'||'_x not
R34017:34022 Imp aevalR_extended :type_scope:x_'||'_x not
R34030:34030 Imp aevalR_extended :type_scope:x_'||'_x not
R34005:34010 Imp aevalR_extended AMinus constr
R34015:34016 Imp <> a2 var
R34012:34013 Imp <> a1 var
R34025:34027 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34023:34024 Imp <> n1 var
R34028:34029 Imp <> n2 var
R33993:33996 Imp aevalR_extended :type_scope:x_'||'_x not
R33991:33992 Imp <> a2 var
R33997:33998 Imp <> n2 var
R33979:33982 Imp aevalR_extended :type_scope:x_'||'_x not
R33977:33978 Imp <> a1 var
R33983:33984 Imp <> n1 var
R34062:34065 Imp aevalR_extended aexp ind
R34077:34079 Coq.Init.Datatypes <> nat ind
R34117:34117 Imp aevalR_extended :type_scope:x_'||'_x not
R34129:34134 Imp aevalR_extended :type_scope:x_'||'_x not
R34142:34142 Imp aevalR_extended :type_scope:x_'||'_x not
R34118:34122 Imp aevalR_extended AMult constr
R34127:34128 Imp <> a2 var
R34124:34125 Imp <> a1 var
R34137:34139 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34135:34136 Imp <> n1 var
R34140:34141 Imp <> n2 var
R34106:34109 Imp aevalR_extended :type_scope:x_'||'_x not
R34104:34105 Imp <> a2 var
R34110:34111 Imp <> n2 var
R34092:34095 Imp aevalR_extended :type_scope:x_'||'_x not
R34090:34091 Imp <> a1 var
R34096:34097 Imp <> n1 var
R34166:34171 Imp aevalR_extended aevalR ind
not 34151 aevalR_extended :type_scope:x_'||'_x
R34197:34211 Imp aevalR_extended <> mod
mod 35043:35044 <> Id
ind 35233:35234 Id id
constr 35248:35249 Id Id
R35260:35261 Imp <> id ind
R35253:35255 Coq.Init.Datatypes <> nat ind
prf 35273:35281 Id eq_id_dec
R35302:35303 Imp Id id ind
R35306:35306 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R35316:35320 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R35331:35331 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R35310:35312 Coq.Init.Logic <> :type_scope:x_'='_x not
R35307:35309 Imp <> id1 var
R35313:35315 Imp <> id2 var
R35324:35327 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35321:35323 Imp <> id1 var
R35328:35330 Imp <> id2 var
R35420:35429 Coq.Arith.Peano_dec <> eq_nat_dec thm
R35420:35429 Coq.Arith.Peano_dec <> eq_nat_dec thm
prf 35703:35707 Id eq_id
R35734:35734 Imp <> T var
R35753:35753 Coq.Init.Logic <> :type_scope:x_'='_x not
R35784:35787 Coq.Init.Logic <> :type_scope:x_'='_x not
R35757:35765 Imp Id eq_id_dec thm
R35769:35769 Imp <> x var
R35767:35767 Imp <> x var
R35783:35783 Imp <> q var
R35776:35776 Imp <> p var
R35788:35788 Imp <> p var
R35822:35830 Imp Id eq_id_dec thm
R35822:35830 Imp Id eq_id_dec thm
R35914:35931 SfLib <> ex_falso_quodlibet thm
R35914:35931 SfLib <> ex_falso_quodlibet thm
prf 36017:36022 Id neq_id
R36051:36051 Imp <> T var
R36081:36081 Coq.Init.Logic <> :type_scope:x_'='_x not
R36112:36115 Coq.Init.Logic <> :type_scope:x_'='_x not
R36085:36093 Imp Id eq_id_dec thm
R36097:36097 Imp <> y var
R36095:36095 Imp <> x var
R36111:36111 Imp <> q var
R36104:36104 Imp <> p var
R36116:36116 Imp <> q var
R36056:36059 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36055:36055 Imp <> x var
R36060:36060 Imp <> y var
R36149:36157 Imp Id eq_id_dec thm
R36149:36157 Imp Id eq_id_dec thm
R36247:36248 Imp Id <> mod
def 36967:36971 <> state
R36982:36984 Coq.Init.Datatypes <> nat ind
R36976:36977 SfLib <> id ind
def 36999:37009 <> empty_state
R37013:37017 Imp <> state def
def 37048:37053 <> update
R37061:37065 Imp <> state def
R37073:37074 SfLib <> id ind
R37082:37084 Coq.Init.Datatypes <> nat ind
R37089:37093 Imp <> state def
R37113:37121 SfLib <> eq_id_dec thm
R37125:37126 Imp <> x' var
R37123:37123 Imp <> x var
R37140:37141 Imp <> st var
R37143:37144 Imp <> x' var
R37133:37133 Imp <> n var
prf 37289:37297 <> update_eq
R37335:37337 Coq.Init.Logic <> :type_scope:x_'='_x not
R37319:37324 Imp <> update def
R37331:37331 Imp <> n var
R37329:37329 Imp <> x var
R37326:37327 Imp <> st var
R37334:37334 Imp <> x var
R37338:37338 Imp <> n var
R37367:37372 Imp <> update def
R37383:37387 SfLib <> eq_id thm
R37383:37387 SfLib <> eq_id thm
prf 37457:37466 <> update_neq
R37548:37551 Coq.Init.Logic <> :type_scope:x_'='_x not
R37557:37557 Coq.Init.Logic <> :type_scope:x_'='_x not
R37530:37535 Imp <> update def
R37543:37543 Imp <> n var
R37540:37541 Imp <> x2 var
R37537:37538 Imp <> st var
R37546:37547 Imp <> x1 var
R37552:37553 Imp <> st var
R37555:37556 Imp <> x1 var
R37493:37496 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37491:37492 Imp <> x2 var
R37497:37498 Imp <> x1 var
R37597:37602 Imp <> update def
R37613:37618 SfLib <> neq_id prfax
R37613:37618 SfLib <> neq_id prfax
prf 37803:37816 <> update_example
R37830:37832 Coq.Init.Datatypes <> nat ind
R37874:37876 Coq.Init.Logic <> :type_scope:x_'='_x not
R37839:37844 Imp <> update def
R37865:37865 Imp <> n var
R37859:37860 SfLib <> Id constr
R37846:37856 Imp <> empty_state def
R37869:37870 SfLib <> Id constr
R37906:37911 Imp <> update def
R37922:37927 SfLib <> neq_id prfax
R37922:37927 SfLib <> neq_id prfax
R37939:37941 Coq.Init.Logic <> not def
prf 38039:38051 <> update_shadow
R38080:38084 Imp <> state def
R38127:38129 Coq.Init.Logic <> :type_scope:x_'='_x not
R38092:38097 Imp <> update def
R38121:38122 Imp <> n2 var
R38118:38119 Imp <> x2 var
R38101:38106 Imp <> update def
R38114:38115 Imp <> n1 var
R38111:38112 Imp <> x2 var
R38108:38109 Imp <> st var
R38125:38126 Imp <> x1 var
R38131:38136 Imp <> update def
R38144:38145 Imp <> n2 var
R38141:38142 Imp <> x2 var
R38138:38139 Imp <> st var
R38148:38149 Imp <> x1 var
R38181:38189 SfLib <> eq_id_dec thm
R38181:38189 SfLib <> eq_id_dec thm
R38235:38243 Imp <> update_eq thm
R38235:38243 Imp <> update_eq thm
R38254:38262 Imp <> update_eq thm
R38254:38262 Imp <> update_eq thm
R38312:38321 Imp <> update_neq thm
R38312:38321 Imp <> update_neq thm
R38312:38321 Imp <> update_neq thm
R38312:38321 Imp <> update_neq thm
R38312:38321 Imp <> update_neq thm
R38312:38321 Imp <> update_neq thm
R38312:38321 Imp <> update_neq thm
R38312:38321 Imp <> update_neq thm
prf 38433:38443 <> update_same
R38469:38473 Imp <> state def
R38515:38517 Coq.Init.Logic <> :type_scope:x_'='_x not
R38496:38501 Imp <> update def
R38509:38510 Imp <> n1 var
R38506:38507 Imp <> x1 var
R38503:38504 Imp <> st var
R38513:38514 Imp <> x2 var
R38518:38519 Imp <> st var
R38521:38522 Imp <> x2 var
R38484:38486 Coq.Init.Logic <> :type_scope:x_'='_x not
R38479:38480 Imp <> st var
R38482:38483 Imp <> x1 var
R38487:38488 Imp <> n1 var
R38554:38562 SfLib <> eq_id_dec thm
R38554:38562 SfLib <> eq_id_dec thm
R38608:38616 Imp <> update_eq thm
R38608:38616 Imp <> update_eq thm
R38670:38679 Imp <> update_neq thm
R38670:38679 Imp <> update_neq thm
prf 38776:38789 <> update_permute
R38871:38873 Coq.Init.Logic <> :type_scope:x_'='_x not
R38837:38842 Imp <> update def
R38865:38866 Imp <> n2 var
R38862:38863 Imp <> x1 var
R38845:38850 Imp <> update def
R38858:38859 Imp <> n1 var
R38855:38856 Imp <> x2 var
R38852:38853 Imp <> st var
R38869:38870 Imp <> x3 var
R38875:38880 Imp <> update def
R38903:38904 Imp <> n1 var
R38900:38901 Imp <> x2 var
R38883:38888 Imp <> update def
R38896:38897 Imp <> n2 var
R38893:38894 Imp <> x1 var
R38890:38891 Imp <> st var
R38907:38908 Imp <> x3 var
R38823:38826 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38821:38822 Imp <> x2 var
R38827:38828 Imp <> x1 var
ind 39145:39148 <> aexp
constr 39164:39167 <> ANum
constr 39187:39189 <> AId
constr 39240:39244 <> APlus
constr 39273:39278 <> AMinus
constr 39307:39311 <> AMult
R39178:39181 Imp <> aexp ind
R39171:39173 Coq.Init.Datatypes <> nat ind
R39199:39202 Imp <> aexp ind
R39193:39194 SfLib <> id ind
R39264:39267 Imp <> aexp ind
R39256:39259 Imp <> aexp ind
R39248:39251 Imp <> aexp ind
R39298:39301 Imp <> aexp ind
R39290:39293 Imp <> aexp ind
R39282:39285 Imp <> aexp ind
R39331:39334 Imp <> aexp ind
R39323:39326 Imp <> aexp ind
R39315:39318 Imp <> aexp ind
def 39626:39626 <> X
R39630:39631 SfLib <> id ind
R39636:39637 SfLib <> Id constr
def 39653:39653 <> Y
R39657:39658 SfLib <> id ind
R39663:39664 SfLib <> Id constr
def 39680:39680 <> Z
R39684:39685 SfLib <> id ind
R39690:39691 SfLib <> Id constr
ind 40059:40062 <> bexp
constr 40078:40082 <> BTrue
constr 40095:40100 <> BFalse
constr 40113:40115 <> BEq
constr 40144:40146 <> BLe
constr 40175:40178 <> BNot
constr 40199:40202 <> BAnd
R40086:40089 Imp <> bexp ind
R40104:40107 Imp <> bexp ind
R40135:40138 Imp <> bexp ind
R40127:40130 Imp <> aexp ind
R40119:40122 Imp <> aexp ind
R40166:40169 Imp <> bexp ind
R40158:40161 Imp <> aexp ind
R40150:40153 Imp <> aexp ind
R40190:40193 Imp <> bexp ind
R40182:40185 Imp <> bexp ind
R40222:40225 Imp <> bexp ind
R40214:40217 Imp <> bexp ind
R40206:40209 Imp <> bexp ind
def 40613:40617 <> aeval
R40625:40629 Imp <> state def
R40637:40640 Imp <> aexp ind
R40645:40647 Coq.Init.Datatypes <> nat ind
R40660:40660 Imp <> a var
R40671:40674 Imp <> ANum constr
R40687:40689 Imp <> AId constr
R40696:40697 Imp <> st var
R40761:40765 Imp <> APlus constr
R40776:40776 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R40788:40792 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R40804:40804 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R40777:40781 Imp <> aeval def
R40783:40784 Imp <> st var
R40793:40797 Imp <> aeval def
R40799:40800 Imp <> st var
R40810:40815 Imp <> AMinus constr
R40827:40827 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R40839:40843 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R40855:40855 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R40828:40832 Imp <> aeval def
R40834:40835 Imp <> st var
R40844:40848 Imp <> aeval def
R40850:40851 Imp <> st var
R40861:40865 Imp <> AMult constr
R40876:40876 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R40888:40892 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R40904:40904 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R40877:40881 Imp <> aeval def
R40883:40884 Imp <> st var
R40893:40897 Imp <> aeval def
R40899:40900 Imp <> st var
def 40923:40927 <> beval
R40935:40939 Imp <> state def
R40947:40950 Imp <> bexp ind
R40955:40958 Coq.Init.Datatypes <> bool ind
R40971:40971 Imp <> b var
R40982:40986 Imp <> BTrue constr
R40997:41000 Coq.Init.Datatypes <> true constr
R41006:41011 Imp <> BFalse constr
R41021:41025 Coq.Init.Datatypes <> false constr
R41031:41033 Imp <> BEq constr
R41046:41052 Coq.Arith.EqNat <> beq_nat def
R41069:41073 Imp <> aeval def
R41075:41076 Imp <> st var
R41055:41059 Imp <> aeval def
R41061:41062 Imp <> st var
R41086:41088 Imp <> BLe constr
R41101:41107 SfLib <> ble_nat def
R41124:41128 Imp <> aeval def
R41130:41131 Imp <> st var
R41110:41114 Imp <> aeval def
R41116:41117 Imp <> st var
R41141:41144 Imp <> BNot constr
R41156:41159 Coq.Init.Datatypes <> negb def
R41162:41166 Imp <> beval def
R41168:41169 Imp <> st var
R41179:41182 Imp <> BAnd constr
R41194:41197 Coq.Init.Datatypes <> andb def
R41214:41218 Imp <> beval def
R41220:41221 Imp <> st var
R41200:41204 Imp <> beval def
R41206:41207 Imp <> st var
def 41243:41247 <> aexp1
R41333:41337 Coq.Init.Logic <> :type_scope:x_'='_x not
R41253:41257 Imp <> aeval def
R41293:41297 Imp <> APlus constr
R41309:41313 Imp <> AMult constr
R41324:41327 Imp <> ANum constr
R41316:41318 Imp <> AId constr
R41320:41320 Imp <> X def
R41300:41303 Imp <> ANum constr
R41260:41265 Imp <> update def
R41279:41279 Imp <> X def
R41267:41277 Imp <> empty_state def
def 41376:41380 <> bexp1
R41467:41471 Coq.Init.Logic <> :type_scope:x_'='_x not
R41386:41390 Imp <> beval def
R41426:41429 Imp <> BAnd constr
R41438:41441 Imp <> BNot constr
R41444:41446 Imp <> BLe constr
R41457:41460 Imp <> ANum constr
R41449:41451 Imp <> AId constr
R41453:41453 Imp <> X def
R41431:41435 Imp <> BTrue constr
R41393:41398 Imp <> update def
R41412:41412 Imp <> X def
R41400:41410 Imp <> empty_state def
R41472:41475 Coq.Init.Datatypes <> true constr
ind 42319:42321 <> com
constr 42337:42341 <> CSkip
constr 42353:42356 <> CAss
constr 42382:42385 <> CSeq
constr 42411:42413 <> CIf
constr 42447:42452 <> CWhile
R42345:42347 Imp <> com ind
R42374:42376 Imp <> com ind
R42366:42369 Imp <> aexp ind
R42360:42361 SfLib <> id ind
R42403:42405 Imp <> com ind
R42396:42398 Imp <> com ind
R42389:42391 Imp <> com ind
R42439:42441 Imp <> com ind
R42432:42434 Imp <> com ind
R42425:42427 Imp <> com ind
R42417:42420 Imp <> bexp ind
R42471:42473 Imp <> com ind
R42464:42466 Imp <> com ind
R42456:42459 Imp <> bexp ind
R43124:43128 Imp <> CSkip constr
not 43110 <> ::'SKIP'
R43158:43161 Imp <> CAss constr
not 43140 <> ::x_'::='_x
R43209:43212 Imp <> CSeq constr
not 43192 <> ::x_';;'_x
R43297:43302 Imp <> CWhile constr
not 43266 <> ::'WHILE'_x_'DO'_x_'END'
R43396:43398 Imp <> CIf constr
not 43354 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 43560:43570 <> fact_in_coq
R43574:43576 Imp <> com ind
R43594:43598 Imp <> ::x_';;'_x not
R43584:43588 Imp <> ::x_'::='_x not
R43583:43583 Imp <> Z def
R43589:43591 Imp <> AId constr
R43593:43593 Imp <> X def
R43611:43615 Imp <> ::x_';;'_x not
R43600:43604 Imp <> ::x_'::='_x not
R43599:43599 Imp <> Y def
R43605:43608 Imp <> ANum constr
R43616:43621 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R43649:43656 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R43720:43725 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R43622:43625 Imp <> BNot constr
R43628:43630 Imp <> BEq constr
R43641:43644 Imp <> ANum constr
R43633:43635 Imp <> AId constr
R43637:43637 Imp <> Z def
R43684:43690 Imp <> ::x_';;'_x not
R43658:43662 Imp <> ::x_'::='_x not
R43657:43657 Imp <> Y def
R43663:43667 Imp <> AMult constr
R43678:43680 Imp <> AId constr
R43682:43682 Imp <> Z def
R43670:43672 Imp <> AId constr
R43674:43674 Imp <> Y def
R43692:43696 Imp <> ::x_'::='_x not
R43691:43691 Imp <> Z def
R43697:43702 Imp <> AMinus constr
R43713:43716 Imp <> ANum constr
R43705:43707 Imp <> AId constr
R43709:43709 Imp <> Z def
def 43842:43846 <> plus2
R43850:43852 Imp <> com ind
R43860:43865 Imp <> ::x_'::='_x not
R43888:43888 Imp <> ::x_'::='_x not
R43859:43859 Imp <> X def
R43866:43870 Imp <> APlus constr
R43881:43884 Imp <> ANum constr
R43873:43875 Imp <> AId constr
R43877:43877 Imp <> X def
def 43903:43912 <> XtimesYinZ
R43916:43918 Imp <> com ind
R43926:43931 Imp <> ::x_'::='_x not
R43953:43953 Imp <> ::x_'::='_x not
R43925:43925 Imp <> Z def
R43932:43936 Imp <> AMult constr
R43947:43949 Imp <> AId constr
R43951:43951 Imp <> Y def
R43939:43941 Imp <> AId constr
R43943:43943 Imp <> X def
def 43968:43987 <> subtract_slowly_body
R43991:43993 Imp <> com ind
R44029:44034 Imp <> ::x_';;'_x not
R44001:44005 Imp <> ::x_'::='_x not
R44000:44000 Imp <> Z def
R44006:44011 Imp <> AMinus constr
R44022:44025 Imp <> ANum constr
R44014:44016 Imp <> AId constr
R44018:44018 Imp <> Z def
R44036:44040 Imp <> ::x_'::='_x not
R44035:44035 Imp <> X def
R44041:44046 Imp <> AMinus constr
R44057:44060 Imp <> ANum constr
R44049:44051 Imp <> AId constr
R44053:44053 Imp <> X def
def 44097:44111 <> subtract_slowly
R44115:44117 Imp <> com ind
R44124:44129 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44157:44164 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44185:44190 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44130:44133 Imp <> BNot constr
R44136:44138 Imp <> BEq constr
R44149:44152 Imp <> ANum constr
R44141:44143 Imp <> AId constr
R44145:44145 Imp <> X def
R44165:44184 Imp <> subtract_slowly_body def
def 44205:44228 <> subtract_3_from_5_slowly
R44232:44234 Imp <> com ind
R44253:44258 Imp <> ::x_';;'_x not
R44242:44246 Imp <> ::x_'::='_x not
R44241:44241 Imp <> X def
R44247:44250 Imp <> ANum constr
R44271:44276 Imp <> ::x_';;'_x not
R44260:44264 Imp <> ::x_'::='_x not
R44259:44259 Imp <> Z def
R44265:44268 Imp <> ANum constr
R44277:44291 Imp <> subtract_slowly def
def 44337:44340 <> loop
R44344:44346 Imp <> com ind
R44353:44358 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44364:44371 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44376:44381 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44359:44363 Imp <> BTrue constr
R44372:44375 Imp <> ::'SKIP' not
def 44873:44890 <> ceval_fun_no_while
R44898:44902 Imp <> state def
R44910:44912 Imp <> com ind
R44917:44921 Imp <> state def
R44934:44934 Imp <> c var
R44947:44950 Imp <> ::'SKIP' not
R44963:44964 Imp <> st var
R44973:44977 Imp <> ::x_'::='_x not
R44992:44997 Imp <> update def
R45005:45009 Imp <> aeval def
R45011:45012 Imp <> st var
R44999:45000 Imp <> st var
R45026:45029 Imp <> ::x_';;'_x not
R45055:45072 Imp <> ceval_fun_no_while def
R45074:45075 Imp <> st var
R45091:45108 Imp <> ceval_fun_no_while def
R45110:45112 Imp <> st' var
R45123:45126 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45128:45133 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45136:45141 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45144:45146 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45163:45167 Imp <> beval def
R45169:45170 Imp <> st var
R45230:45247 Imp <> ceval_fun_no_while def
R45249:45250 Imp <> st var
R45190:45207 Imp <> ceval_fun_no_while def
R45209:45210 Imp <> st var
R45261:45266 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45268:45271 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45273:45276 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45289:45290 Imp <> st var
ind 49277:49281 <> ceval
constr 49322:49327 <> E_Skip
constr 49368:49372 <> E_Ass
constr 49465:49469 <> E_Seq
constr 49584:49591 <> E_IfTrue
constr 49718:49726 <> E_IfFalse
constr 49854:49863 <> E_WhileEnd
constr 49950:49960 <> E_WhileLoop
R49301:49305 Imp <> state def
R49292:49296 Imp <> state def
R49285:49287 Imp <> com ind
R50152:50156 Imp <> ceval ind
R49352:49354 Imp <> ::x_'/'_x_'||'_x not
R49357:49360 Imp <> ::x_'/'_x_'||'_x not
R49348:49351 Imp <> ::'SKIP' not
R49355:49356 Imp <> st var
R49361:49362 Imp <> st var
R49426:49426 Imp <> ::x_'/'_x_'||'_x not
R49435:49438 Imp <> ::x_'/'_x_'||'_x not
R49441:49445 Imp <> ::x_'/'_x_'||'_x not
R49459:49459 Imp <> ::x_'/'_x_'||'_x not
R49428:49432 Imp <> ::x_'::='_x not
R49427:49427 Imp <> x var
R49433:49434 Imp <> a1 var
R49439:49440 Imp <> st var
R49446:49451 Imp <> update def
R49458:49458 Imp <> n var
R49456:49456 Imp <> x var
R49453:49454 Imp <> st var
R49412:49414 Coq.Init.Logic <> :type_scope:x_'='_x not
R49401:49405 Imp <> aeval def
R49410:49411 Imp <> a1 var
R49407:49408 Imp <> st var
R49415:49415 Imp <> n var
R49556:49556 Imp <> ::x_'/'_x_'||'_x not
R49565:49568 Imp <> ::x_'/'_x_'||'_x not
R49571:49574 Imp <> ::x_'/'_x_'||'_x not
R49559:49562 Imp <> ::x_';;'_x not
R49557:49558 Imp <> c1 var
R49563:49564 Imp <> c2 var
R49569:49570 Imp <> st var
R49575:49578 Imp <> st'' var
R49532:49534 Imp <> ::x_'/'_x_'||'_x not
R49538:49541 Imp <> ::x_'/'_x_'||'_x not
R49530:49531 Imp <> c2 var
R49535:49537 Imp <> st' var
R49542:49545 Imp <> st'' var
R49507:49509 Imp <> ::x_'/'_x_'||'_x not
R49512:49516 Imp <> ::x_'/'_x_'||'_x not
R49505:49506 Imp <> c1 var
R49510:49511 Imp <> st var
R49517:49519 Imp <> st' var
R49675:49675 Imp <> ::x_'/'_x_'||'_x not
R49700:49703 Imp <> ::x_'/'_x_'||'_x not
R49706:49709 Imp <> ::x_'/'_x_'||'_x not
R49676:49679 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49681:49686 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49689:49694 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49697:49699 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49680:49680 Imp <> b var
R49687:49688 Imp <> c1 var
R49695:49696 Imp <> c2 var
R49704:49705 Imp <> st var
R49710:49712 Imp <> st' var
R49653:49655 Imp <> ::x_'/'_x_'||'_x not
R49658:49661 Imp <> ::x_'/'_x_'||'_x not
R49651:49652 Imp <> c1 var
R49656:49657 Imp <> st var
R49662:49664 Imp <> st' var
R49634:49636 Coq.Init.Logic <> :type_scope:x_'='_x not
R49624:49628 Imp <> beval def
R49633:49633 Imp <> b var
R49630:49631 Imp <> st var
R49637:49640 Coq.Init.Datatypes <> true constr
R49811:49811 Imp <> ::x_'/'_x_'||'_x not
R49836:49839 Imp <> ::x_'/'_x_'||'_x not
R49842:49845 Imp <> ::x_'/'_x_'||'_x not
R49812:49815 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49817:49822 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49825:49830 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49833:49835 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49816:49816 Imp <> b var
R49823:49824 Imp <> c1 var
R49831:49832 Imp <> c2 var
R49840:49841 Imp <> st var
R49846:49848 Imp <> st' var
R49789:49791 Imp <> ::x_'/'_x_'||'_x not
R49794:49797 Imp <> ::x_'/'_x_'||'_x not
R49787:49788 Imp <> c2 var
R49792:49793 Imp <> st var
R49798:49800 Imp <> st' var
R49769:49771 Coq.Init.Logic <> :type_scope:x_'='_x not
R49759:49763 Imp <> beval def
R49768:49768 Imp <> b var
R49765:49766 Imp <> st var
R49772:49776 Coq.Init.Datatypes <> false constr
R49916:49916 Imp <> ::x_'/'_x_'||'_x not
R49933:49936 Imp <> ::x_'/'_x_'||'_x not
R49939:49942 Imp <> ::x_'/'_x_'||'_x not
R49917:49922 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49924:49927 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49929:49932 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49923:49923 Imp <> b var
R49928:49928 Imp <> c var
R49937:49938 Imp <> st var
R49943:49944 Imp <> st var
R49898:49900 Coq.Init.Logic <> :type_scope:x_'='_x not
R49888:49892 Imp <> beval def
R49897:49897 Imp <> b var
R49894:49895 Imp <> st var
R49901:49905 Coq.Init.Datatypes <> false constr
R50086:50086 Imp <> ::x_'/'_x_'||'_x not
R50103:50106 Imp <> ::x_'/'_x_'||'_x not
R50109:50112 Imp <> ::x_'/'_x_'||'_x not
R50087:50092 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50094:50097 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50099:50102 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50093:50093 Imp <> b var
R50098:50098 Imp <> c var
R50107:50108 Imp <> st var
R50113:50116 Imp <> st'' var
R50044:50044 Imp <> ::x_'/'_x_'||'_x not
R50061:50064 Imp <> ::x_'/'_x_'||'_x not
R50068:50071 Imp <> ::x_'/'_x_'||'_x not
R50045:50050 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50052:50055 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50057:50060 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50051:50051 Imp <> b var
R50056:50056 Imp <> c var
R50065:50067 Imp <> st' var
R50072:50075 Imp <> st'' var
R50022:50024 Imp <> ::x_'/'_x_'||'_x not
R50027:50030 Imp <> ::x_'/'_x_'||'_x not
R50021:50021 Imp <> c var
R50025:50026 Imp <> st var
R50031:50033 Imp <> st' var
R50004:50006 Coq.Init.Logic <> :type_scope:x_'='_x not
R49994:49998 Imp <> beval def
R50003:50003 Imp <> b var
R50000:50001 Imp <> st var
R50007:50010 Coq.Init.Datatypes <> true constr
R50152:50156 Imp <> ceval ind
not 50127 <> ::x_'/'_x_'||'_x
def 50678:50691 <> ceval_example1
R50698:50698 Imp <> ::x_'/'_x_'||'_x not
R50801:50807 Imp <> ::x_'/'_x_'||'_x not
R50819:50826 Imp <> ::x_'/'_x_'||'_x not
R50862:50862 Imp <> ::x_'/'_x_'||'_x not
R50711:50718 Imp <> ::x_';;'_x not
R50700:50704 Imp <> ::x_'::='_x not
R50699:50699 Imp <> X def
R50705:50708 Imp <> ANum constr
R50719:50722 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50743:50755 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50768:50780 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50793:50800 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50723:50725 Imp <> BLe constr
R50736:50739 Imp <> ANum constr
R50728:50730 Imp <> AId constr
R50732:50732 Imp <> X def
R50757:50761 Imp <> ::x_'::='_x not
R50756:50756 Imp <> Y def
R50762:50765 Imp <> ANum constr
R50782:50786 Imp <> ::x_'::='_x not
R50781:50781 Imp <> Z def
R50787:50790 Imp <> ANum constr
R50808:50818 Imp <> empty_state def
R50827:50832 Imp <> update def
R50859:50859 Imp <> Z def
R50835:50840 Imp <> update def
R50854:50854 Imp <> X def
R50842:50852 Imp <> empty_state def
R50938:50943 Imp <> update def
R50957:50957 Imp <> X def
R50945:50955 Imp <> empty_state def
R50926:50930 Imp <> E_Seq constr
R50938:50943 Imp <> update def
R50957:50957 Imp <> X def
R50945:50955 Imp <> empty_state def
R50926:50930 Imp <> E_Seq constr
R51002:51006 Imp <> E_Ass constr
R51002:51006 Imp <> E_Ass constr
R51053:51061 Imp <> E_IfFalse constr
R51053:51061 Imp <> E_IfFalse constr
R51095:51099 Imp <> E_Ass constr
R51095:51099 Imp <> E_Ass constr
def 51178:51191 <> ceval_example2
R51198:51198 Imp <> ::x_'/'_x_'||'_x not
R51241:51244 Imp <> ::x_'/'_x_'||'_x not
R51256:51264 Imp <> ::x_'/'_x_'||'_x not
R51313:51313 Imp <> ::x_'/'_x_'||'_x not
R51211:51213 Imp <> ::x_';;'_x not
R51200:51204 Imp <> ::x_'::='_x not
R51199:51199 Imp <> X def
R51205:51208 Imp <> ANum constr
R51226:51228 Imp <> ::x_';;'_x not
R51215:51219 Imp <> ::x_'::='_x not
R51214:51214 Imp <> Y def
R51220:51223 Imp <> ANum constr
R51230:51234 Imp <> ::x_'::='_x not
R51229:51229 Imp <> Z def
R51235:51238 Imp <> ANum constr
R51245:51255 Imp <> empty_state def
R51265:51270 Imp <> update def
R51310:51310 Imp <> Z def
R51273:51278 Imp <> update def
R51305:51305 Imp <> Y def
R51281:51286 Imp <> update def
R51300:51300 Imp <> X def
R51288:51298 Imp <> empty_state def
R51343:51348 Imp <> update def
R51362:51362 Imp <> X def
R51350:51360 Imp <> empty_state def
R51331:51335 Imp <> E_Seq constr
R51343:51348 Imp <> update def
R51362:51362 Imp <> X def
R51350:51360 Imp <> empty_state def
R51331:51335 Imp <> E_Seq constr
R51394:51398 Imp <> E_Ass constr
R51394:51398 Imp <> E_Ass constr
R51464:51469 Imp <> update def
R51496:51496 Imp <> Y def
R51472:51477 Imp <> update def
R51491:51491 Imp <> X def
R51479:51489 Imp <> empty_state def
R51452:51456 Imp <> E_Seq constr
R51464:51469 Imp <> update def
R51496:51496 Imp <> Y def
R51472:51477 Imp <> update def
R51491:51491 Imp <> X def
R51479:51489 Imp <> empty_state def
R51452:51456 Imp <> E_Seq constr
R51532:51536 Imp <> E_Ass constr
R51532:51536 Imp <> E_Ass constr
R51581:51585 Imp <> E_Ass constr
R51581:51585 Imp <> E_Ass constr
def 51917:51924 <> pup_to_n
R51928:51930 Imp <> com ind
R51949:51953 Imp <> ::x_';;'_x not
R51938:51942 Imp <> ::x_'::='_x not
R51937:51937 Imp <> Y def
R51943:51946 Imp <> ANum constr
R51954:51959 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51987:51994 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52062:52067 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51960:51963 Imp <> BNot constr
R51966:51968 Imp <> BLe constr
R51979:51982 Imp <> ANum constr
R51971:51973 Imp <> AId constr
R51975:51975 Imp <> X def
R52024:52030 Imp <> ::x_';;'_x not
R51996:52001 Imp <> ::x_'::='_x not
R52023:52023 Imp <> ::x_'::='_x not
R51995:51995 Imp <> Y def
R52002:52006 Imp <> APlus constr
R52017:52019 Imp <> AId constr
R52021:52021 Imp <> Y def
R52009:52011 Imp <> AId constr
R52013:52013 Imp <> X def
R52032:52037 Imp <> ::x_'::='_x not
R52061:52061 Imp <> ::x_'::='_x not
R52031:52031 Imp <> X def
R52038:52043 Imp <> AMinus constr
R52054:52057 Imp <> ANum constr
R52046:52048 Imp <> AId constr
R52050:52050 Imp <> X def
prf 52079:52092 <> pup_to_2_ceval
R52106:52109 Imp <> ::x_'/'_x_'||'_x not
R52132:52140 Imp <> ::x_'/'_x_'||'_x not
R52098:52105 Imp <> pup_to_n def
R52110:52115 Imp <> update def
R52129:52129 Imp <> X def
R52117:52127 Imp <> empty_state def
R52141:52146 Imp <> update def
R52231:52231 Imp <> X def
R52149:52154 Imp <> update def
R52226:52226 Imp <> Y def
R52157:52162 Imp <> update def
R52221:52221 Imp <> X def
R52165:52170 Imp <> update def
R52216:52216 Imp <> Y def
R52173:52178 Imp <> update def
R52211:52211 Imp <> Y def
R52181:52186 Imp <> update def
R52206:52206 Imp <> X def
R52188:52198 Imp <> empty_state def
R52252:52259 Imp <> pup_to_n def
R52282:52287 Imp <> update def
R52314:52314 Imp <> Y def
R52290:52295 Imp <> update def
R52309:52309 Imp <> X def
R52297:52307 Imp <> empty_state def
R52270:52274 Imp <> E_Seq constr
R52282:52287 Imp <> update def
R52314:52314 Imp <> Y def
R52290:52295 Imp <> update def
R52309:52309 Imp <> X def
R52297:52307 Imp <> empty_state def
R52270:52274 Imp <> E_Seq constr
R52328:52332 Imp <> E_Ass constr
R52328:52332 Imp <> E_Ass constr
R52374:52379 Imp <> update def
R52432:52432 Imp <> X def
R52382:52387 Imp <> update def
R52427:52427 Imp <> Y def
R52390:52395 Imp <> update def
R52422:52422 Imp <> Y def
R52398:52403 Imp <> update def
R52417:52417 Imp <> X def
R52405:52415 Imp <> empty_state def
R52356:52366 Imp <> E_WhileLoop constr
R52374:52379 Imp <> update def
R52432:52432 Imp <> X def
R52382:52387 Imp <> update def
R52427:52427 Imp <> Y def
R52390:52395 Imp <> update def
R52422:52422 Imp <> Y def
R52398:52403 Imp <> update def
R52417:52417 Imp <> X def
R52405:52415 Imp <> empty_state def
R52356:52366 Imp <> E_WhileLoop constr
R52473:52478 Imp <> update def
R52518:52518 Imp <> Y def
R52481:52486 Imp <> update def
R52513:52513 Imp <> Y def
R52489:52494 Imp <> update def
R52508:52508 Imp <> X def
R52496:52506 Imp <> empty_state def
R52461:52465 Imp <> E_Seq constr
R52473:52478 Imp <> update def
R52518:52518 Imp <> Y def
R52481:52486 Imp <> update def
R52513:52513 Imp <> Y def
R52489:52494 Imp <> update def
R52508:52508 Imp <> X def
R52496:52506 Imp <> empty_state def
R52461:52465 Imp <> E_Seq constr
R52532:52536 Imp <> E_Ass constr
R52532:52536 Imp <> E_Ass constr
R52560:52564 Imp <> E_Ass constr
R52560:52564 Imp <> E_Ass constr
R52606:52611 Imp <> update def
R52690:52690 Imp <> X def
R52614:52619 Imp <> update def
R52685:52685 Imp <> Y def
R52622:52627 Imp <> update def
R52680:52680 Imp <> X def
R52630:52635 Imp <> update def
R52675:52675 Imp <> Y def
R52638:52643 Imp <> update def
R52670:52670 Imp <> Y def
R52646:52651 Imp <> update def
R52665:52665 Imp <> X def
R52653:52663 Imp <> empty_state def
R52588:52598 Imp <> E_WhileLoop constr
R52606:52611 Imp <> update def
R52690:52690 Imp <> X def
R52614:52619 Imp <> update def
R52685:52685 Imp <> Y def
R52622:52627 Imp <> update def
R52680:52680 Imp <> X def
R52630:52635 Imp <> update def
R52675:52675 Imp <> Y def
R52638:52643 Imp <> update def
R52670:52670 Imp <> Y def
R52646:52651 Imp <> update def
R52665:52665 Imp <> X def
R52653:52663 Imp <> empty_state def
R52588:52598 Imp <> E_WhileLoop constr
R52731:52736 Imp <> update def
R52802:52802 Imp <> Y def
R52739:52744 Imp <> update def
R52797:52797 Imp <> X def
R52747:52752 Imp <> update def
R52792:52792 Imp <> Y def
R52755:52760 Imp <> update def
R52787:52787 Imp <> Y def
R52763:52768 Imp <> update def
R52782:52782 Imp <> X def
R52770:52780 Imp <> empty_state def
R52719:52723 Imp <> E_Seq constr
R52731:52736 Imp <> update def
R52802:52802 Imp <> Y def
R52739:52744 Imp <> update def
R52797:52797 Imp <> X def
R52747:52752 Imp <> update def
R52792:52792 Imp <> Y def
R52755:52760 Imp <> update def
R52787:52787 Imp <> Y def
R52763:52768 Imp <> update def
R52782:52782 Imp <> X def
R52770:52780 Imp <> empty_state def
R52719:52723 Imp <> E_Seq constr
R52816:52820 Imp <> E_Ass constr
R52816:52820 Imp <> E_Ass constr
R52844:52848 Imp <> E_Ass constr
R52844:52848 Imp <> E_Ass constr
R52872:52881 Imp <> E_WhileEnd constr
R52872:52881 Imp <> E_WhileEnd constr
prf 53674:53692 <> ceval_deterministic
R53769:53771 Coq.Init.Logic <> :type_scope:x_'='_x not
R53766:53768 Imp <> st1 var
R53772:53774 Imp <> st2 var
R53745:53747 Imp <> ::x_'/'_x_'||'_x not
R53750:53753 Imp <> ::x_'/'_x_'||'_x not
R53744:53744 Imp <> c var
R53748:53749 Imp <> st var
R53754:53756 Imp <> st2 var
R53722:53724 Imp <> ::x_'/'_x_'||'_x not
R53727:53730 Imp <> ::x_'/'_x_'||'_x not
R53721:53721 Imp <> c var
R53725:53726 Imp <> st var
R53731:53733 Imp <> st1 var
R54013:54015 Coq.Init.Logic <> :type_scope:x_'='_x not
R54013:54015 Coq.Init.Logic <> :type_scope:x_'='_x not
R54802:54804 Coq.Init.Logic <> :type_scope:x_'='_x not
R54802:54804 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 55284:55293 <> plus2_spec
R55358:55360 Coq.Init.Logic <> :type_scope:x_'='_x not
R55353:55355 Imp <> st' var
R55357:55357 Imp <> X def
R55362:55364 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R55361:55361 Imp <> n var
R55335:55337 Imp <> ::x_'/'_x_'||'_x not
R55340:55343 Imp <> ::x_'/'_x_'||'_x not
R55330:55334 Imp <> plus2 def
R55338:55339 Imp <> st var
R55344:55346 Imp <> st' var
R55320:55322 Coq.Init.Logic <> :type_scope:x_'='_x not
R55316:55317 Imp <> st var
R55319:55319 Imp <> X def
R55323:55323 Imp <> n var
R55671:55679 Imp <> update_eq thm
R55671:55679 Imp <> update_eq thm
prf 55803:55817 <> XtimesYinZ_spec
R55903:55905 Coq.Init.Logic <> :type_scope:x_'='_x not
R55898:55900 Imp <> st' var
R55902:55902 Imp <> Z def
R55907:55909 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R55906:55906 Imp <> x var
R55910:55910 Imp <> y var
R55880:55882 Imp <> ::x_'/'_x_'||'_x not
R55885:55888 Imp <> ::x_'/'_x_'||'_x not
R55870:55879 Imp <> XtimesYinZ def
R55883:55884 Imp <> st var
R55889:55891 Imp <> st' var
R55860:55862 Coq.Init.Logic <> :type_scope:x_'='_x not
R55856:55857 Imp <> st var
R55859:55859 Imp <> Y def
R55863:55863 Imp <> y var
R55846:55848 Coq.Init.Logic <> :type_scope:x_'='_x not
R55842:55843 Imp <> st var
R55845:55845 Imp <> X def
R55849:55849 Imp <> x var
R55998:56006 Imp <> update_eq thm
R55998:56006 Imp <> update_eq thm
prf 56083:56098 <> loop_never_stops
R56119:56120 Coq.Init.Logic <> :type_scope:'~'_x not
R56137:56137 Coq.Init.Logic <> :type_scope:'~'_x not
R56125:56127 Imp <> ::x_'/'_x_'||'_x not
R56130:56133 Imp <> ::x_'/'_x_'||'_x not
R56121:56124 Imp <> loop def
R56128:56129 Imp <> st var
R56134:56136 Imp <> st' var
R56178:56181 Imp <> loop def
R56206:56211 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56217:56220 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56225:56228 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56212:56216 Imp <> BTrue constr
R56221:56224 Imp <> ::'SKIP' not
R56206:56211 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56217:56220 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56225:56228 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56212:56216 Imp <> BTrue constr
R56221:56224 Imp <> ::'SKIP' not
def 56787:56795 <> no_whiles
R56802:56804 Imp <> com ind
R56809:56812 Coq.Init.Datatypes <> bool ind
R56825:56825 Imp <> c var
R56836:56839 Imp <> ::'SKIP' not
R56850:56853 Coq.Init.Datatypes <> true constr
R56860:56864 Imp <> ::x_'::='_x not
R56873:56876 Coq.Init.Datatypes <> true constr
R56884:56887 Imp <> ::x_';;'_x not
R56895:56898 Coq.Init.Datatypes <> andb def
R56916:56924 Imp <> no_whiles def
R56901:56909 Imp <> no_whiles def
R56934:56937 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56939:56944 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56947:56952 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56955:56957 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56962:56965 Coq.Init.Datatypes <> andb def
R56983:56991 Imp <> no_whiles def
R56968:56976 Imp <> no_whiles def
R57001:57006 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57008:57011 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57013:57016 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57022:57026 Coq.Init.Datatypes <> false constr
ind 57325:57334 <> no_whilesR
constr 57356:57359 <> skip
constr 57383:57385 <> seq
constr 57461:57463 <> ass
constr 57502:57504 <> ifb
R57337:57339 Imp <> com ind
R57363:57372 Imp <> no_whilesR ind
R57374:57377 Imp <> ::'SKIP' not
R57437:57446 Imp <> no_whilesR ind
R57451:57452 Imp <> ::x_';;'_x not
R57449:57450 Imp <> c1 var
R57453:57454 Imp <> c2 var
R57420:57429 Imp <> no_whilesR ind
R57431:57432 Imp <> c2 var
R57403:57412 Imp <> no_whilesR ind
R57414:57415 Imp <> c1 var
R57479:57488 Imp <> no_whilesR ind
R57492:57494 Imp <> ::x_'::='_x not
R57491:57491 Imp <> X var
R57495:57495 Imp <> a var
R57583:57592 Imp <> no_whilesR ind
R57595:57598 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57600:57605 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57608:57613 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57616:57618 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57599:57599 Imp <> b var
R57606:57607 Imp <> ct var
R57614:57615 Imp <> cf var
R57541:57550 Imp <> no_whilesR ind
R57552:57553 Imp <> cf var
R57524:57533 Imp <> no_whilesR ind
R57535:57536 Imp <> ct var
prf 57631:57643 <> no_whiles_eqv
R57677:57681 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R57670:57672 Coq.Init.Logic <> :type_scope:x_'='_x not
R57659:57667 Imp <> no_whiles def
R57669:57669 Imp <> c var
R57673:57676 Coq.Init.Datatypes <> true constr
R57682:57691 Imp <> no_whilesR ind
R57693:57693 Imp <> c var
R57813:57825 Coq.Bool.Bool <> andb_true_iff thm
R57883:57895 Coq.Bool.Bool <> andb_true_iff thm
R57813:57825 Coq.Bool.Bool <> andb_true_iff thm
R57813:57825 Coq.Bool.Bool <> andb_true_iff thm
R57813:57825 Coq.Bool.Bool <> andb_true_iff thm
R57813:57825 Coq.Bool.Bool <> andb_true_iff thm
R57883:57895 Coq.Bool.Bool <> andb_true_iff thm
R57883:57895 Coq.Bool.Bool <> andb_true_iff thm
R58020:58032 Coq.Bool.Bool <> andb_true_iff thm
R58020:58032 Coq.Bool.Bool <> andb_true_iff thm
R58132:58144 Coq.Bool.Bool <> andb_true_iff thm
R58132:58144 Coq.Bool.Bool <> andb_true_iff thm
prf 58494:58514 <> no_whiles_terminating
R58553:58559 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58563:58564 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58566:58568 Imp <> ::x_'/'_x_'||'_x not
R58571:58574 Imp <> ::x_'/'_x_'||'_x not
R58565:58565 Imp <> c var
R58569:58570 Imp <> st var
R58575:58577 Imp <> st' var
R58534:58543 Imp <> no_whilesR ind
R58545:58545 Imp <> c var
R58691:58696 Imp <> E_Skip constr
R58691:58696 Imp <> E_Skip constr
R58737:58743 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58747:58748 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58751:58753 Imp <> ::x_'/'_x_'||'_x not
R58756:58759 Imp <> ::x_'/'_x_'||'_x not
R58760:58762 Imp <> st' var
R58737:58743 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58747:58748 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58751:58753 Imp <> ::x_'/'_x_'||'_x not
R58756:58759 Imp <> ::x_'/'_x_'||'_x not
R58760:58762 Imp <> st' var
R58845:58851 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58855:58856 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58859:58861 Imp <> ::x_'/'_x_'||'_x not
R58865:58868 Imp <> ::x_'/'_x_'||'_x not
R58869:58871 Imp <> st' var
R58845:58851 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58855:58856 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58859:58861 Imp <> ::x_'/'_x_'||'_x not
R58865:58868 Imp <> ::x_'/'_x_'||'_x not
R58869:58871 Imp <> st' var
R58968:58972 Imp <> E_Seq constr
R58968:58972 Imp <> E_Seq constr
R59052:59057 Imp <> update def
R59066:59070 Imp <> aeval def
R59052:59057 Imp <> update def
R59066:59070 Imp <> aeval def
R59090:59094 Imp <> E_Ass constr
R59090:59094 Imp <> E_Ass constr
R59154:59158 Imp <> beval def
R59154:59158 Imp <> beval def
R59237:59243 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59247:59248 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59251:59253 Imp <> ::x_'/'_x_'||'_x not
R59256:59259 Imp <> ::x_'/'_x_'||'_x not
R59260:59262 Imp <> st' var
R59237:59243 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59247:59248 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59251:59253 Imp <> ::x_'/'_x_'||'_x not
R59256:59259 Imp <> ::x_'/'_x_'||'_x not
R59260:59262 Imp <> st' var
R59367:59374 Imp <> E_IfTrue constr
R59367:59374 Imp <> E_IfTrue constr
R59476:59482 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59486:59487 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59490:59492 Imp <> ::x_'/'_x_'||'_x not
R59495:59498 Imp <> ::x_'/'_x_'||'_x not
R59499:59501 Imp <> st' var
R59476:59482 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59486:59487 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59490:59492 Imp <> ::x_'/'_x_'||'_x not
R59495:59498 Imp <> ::x_'/'_x_'||'_x not
R59499:59501 Imp <> st' var
R59606:59614 Imp <> E_IfFalse constr
R59606:59614 Imp <> E_IfFalse constr
ind 61021:61026 <> sinstr
constr 61040:61044 <> SPush
constr 61064:61068 <> SLoad
constr 61087:61091 <> SPlus
constr 61104:61109 <> SMinus
constr 61122:61126 <> SMult
R61055:61060 Imp <> sinstr ind
R61048:61050 Coq.Init.Datatypes <> nat ind
R61078:61083 Imp <> sinstr ind
R61072:61073 SfLib <> id ind
R61095:61100 Imp <> sinstr ind
R61113:61118 Imp <> sinstr ind
R61130:61135 Imp <> sinstr ind
def 61780:61788 <> s_execute
R61796:61800 Imp <> state def
R61812:61815 Coq.Init.Datatypes <> list ind
R61817:61819 Coq.Init.Datatypes <> nat ind
R61849:61852 Coq.Init.Datatypes <> list ind
R61854:61859 Imp <> sinstr ind
R61881:61884 Coq.Init.Datatypes <> list ind
R61886:61888 Coq.Init.Datatypes <> nat ind
R61912:61916 SfLib <> admit prfax
def 61929:61938 <> s_execute1
R62014:62019 Coq.Init.Logic <> :type_scope:x_'='_x not
R61947:61955 Imp <> s_execute def
R61979:61979 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R61987:61988 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R61996:61997 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62005:62006 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62013:62013 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62007:62012 Imp <> SMinus constr
R61998:62002 Imp <> SPush constr
R61989:61993 Imp <> SPush constr
R61980:61984 Imp <> SPush constr
R61969:61970 Coq.Lists.List ListNotations :list_scope:'['_']' not
R61957:61967 Imp <> empty_state def
R62020:62020 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62022:62023 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62025:62025 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 62066:62075 <> s_execute2
R62164:62169 Coq.Init.Logic <> :type_scope:x_'='_x not
R62084:62092 Imp <> s_execute def
R62132:62132 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62140:62141 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62149:62150 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62156:62157 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62163:62163 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62158:62162 Imp <> SPlus constr
R62151:62155 Imp <> SMult constr
R62142:62146 Imp <> SLoad constr
R62148:62148 Imp <> X def
R62133:62137 Imp <> SPush constr
R62119:62119 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62121:62121 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62123:62123 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62095:62100 Imp <> update def
R62114:62114 Imp <> X def
R62102:62112 Imp <> empty_state def
R62170:62170 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62173:62174 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62176:62176 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 62418:62426 <> s_compile
R62433:62436 Imp <> aexp ind
R62441:62444 Coq.Init.Datatypes <> list ind
R62446:62451 Imp <> sinstr ind
R62475:62479 SfLib <> admit prfax
def 62580:62589 <> s_compile1
R62648:62652 Coq.Init.Logic <> :type_scope:x_'='_x not
R62597:62605 Imp <> s_compile def
R62608:62613 Imp <> AMinus constr
R62624:62628 Imp <> AMult constr
R62640:62642 Imp <> AId constr
R62644:62644 Imp <> Y def
R62631:62634 Imp <> ANum constr
R62616:62618 Imp <> AId constr
R62620:62620 Imp <> X def
R62653:62653 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62661:62662 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62670:62671 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62679:62680 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62686:62687 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62694:62694 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62688:62693 Imp <> SMinus constr
R62681:62685 Imp <> SMult constr
R62672:62676 Imp <> SLoad constr
R62678:62678 Imp <> Y def
R62663:62667 Imp <> SPush constr
R62654:62658 Imp <> SLoad constr
R62660:62660 Imp <> X def
prf 63497:63513 <> s_compile_correct
R63530:63534 Imp <> state def
R63542:63545 Imp <> aexp ind
R63580:63582 Coq.Init.Logic <> :type_scope:x_'='_x not
R63551:63559 Imp <> s_execute def
R63568:63576 Imp <> s_compile def
R63578:63578 Imp <> e var
R63564:63565 Coq.Lists.List ListNotations :list_scope:'['_']' not
R63561:63562 Imp <> st var
R63583:63584 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63595:63596 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63585:63589 Imp <> aeval def
R63594:63594 Imp <> e var
R63591:63592 Imp <> st var
mod 63708:63715 <> BreakImp
ind 64012:64014 BreakImp com
constr 64030:64034 BreakImp CSkip
constr 64046:64051 BreakImp CBreak
constr 64063:64066 BreakImp CAss
constr 64092:64095 BreakImp CSeq
constr 64121:64123 BreakImp CIf
constr 64157:64162 BreakImp CWhile
R64038:64040 Imp <> com ind
R64055:64057 Imp <> com ind
R64084:64086 Imp <> com ind
R64076:64079 Imp BreakImp aexp ind
R64070:64071 SfLib <> id ind
R64113:64115 Imp <> com ind
R64106:64108 Imp <> com ind
R64099:64101 Imp <> com ind
R64149:64151 Imp <> com ind
R64142:64144 Imp <> com ind
R64135:64137 Imp <> com ind
R64127:64130 Imp BreakImp bexp ind
R64181:64183 Imp <> com ind
R64174:64176 Imp <> com ind
R64166:64169 Imp BreakImp bexp ind
R64398:64402 Imp BreakImp CSkip constr
not 64384 BreakImp ::'SKIP'
R64429:64434 Imp BreakImp CBreak constr
not 64414 BreakImp ::'BREAK'
R64464:64467 Imp BreakImp CAss constr
not 64446 BreakImp ::x_'::='_x
R64515:64518 Imp BreakImp CSeq constr
not 64498 BreakImp ::x_';;'_x
R64603:64608 Imp BreakImp CWhile constr
not 64572 BreakImp ::'WHILE'_x_'DO'_x_'END'
R64702:64704 Imp BreakImp CIf constr
not 64660 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 65802:65807 BreakImp status
constr 65823:65831 BreakImp SContinue
constr 65846:65851 BreakImp SBreak
R65835:65840 Imp <> status ind
R65855:65860 Imp <> status ind
ind 68256:68260 BreakImp ceval
constr 68311:68316 BreakImp E_Skip
constr 68370:68376 BreakImp E_Break
constr 68428:68432 BreakImp E_Ass
constr 68559:68566 BreakImp E_IfTrue
constr 68735:68743 BreakImp E_IfFalse
constr 68913:68922 BreakImp E_SeqBreak
constr 69049:69061 BreakImp E_SeqContinue
constr 69215:69224 BreakImp E_WhileEnd
constr 69345:69360 BreakImp E_WhileLoopBreak
constr 69522:69540 BreakImp E_WhileLoopContinue
R68290:68294 Imp BreakImp state def
R68280:68285 Imp BreakImp status ind
R68271:68275 Imp BreakImp state def
R68264:68266 Imp BreakImp com ind
R69800:69804 Imp <> ceval ind
R68342:68344 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68347:68350 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68360:68362 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68337:68341 Imp BreakImp CSkip constr
R68345:68346 Imp <> st var
R68351:68359 Imp BreakImp SContinue constr
R68363:68364 Imp <> st var
R68403:68405 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68408:68411 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68418:68420 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68397:68402 Imp BreakImp CBreak constr
R68406:68407 Imp <> st var
R68412:68417 Imp BreakImp SBreak constr
R68421:68422 Imp <> st var
R68449:68453 Imp BreakImp state def
R68461:68464 Imp BreakImp aexp ind
R68472:68474 Coq.Init.Datatypes <> nat ind
R68482:68483 SfLib <> id ind
R68511:68511 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68519:68522 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68525:68528 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68538:68540 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68513:68517 Imp BreakImp ::x_'::='_x not
R68512:68512 Imp <> x var
R68518:68518 Imp <> a var
R68523:68524 Imp <> st var
R68529:68537 Imp BreakImp SContinue constr
R68541:68546 Imp BreakImp update def
R68553:68553 Imp <> n var
R68551:68551 Imp <> x var
R68548:68549 Imp <> st var
R68503:68505 Coq.Init.Logic <> :type_scope:x_'='_x not
R68493:68497 Imp BreakImp aeval def
R68502:68502 Imp <> a var
R68499:68500 Imp <> st var
R68506:68506 Imp <> n var
R68587:68591 Imp BreakImp state def
R68599:68602 Imp BreakImp bexp ind
R68614:68616 Imp BreakImp com ind
R68624:68629 Imp BreakImp status ind
R68688:68688 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68713:68716 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68719:68722 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68724:68726 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68689:68692 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68694:68699 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68702:68707 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68710:68712 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68693:68693 Imp <> b var
R68700:68701 Imp <> c1 var
R68708:68709 Imp <> c2 var
R68717:68718 Imp <> st var
R68723:68723 Imp <> s var
R68727:68729 Imp <> st' var
R68668:68670 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68673:68676 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68678:68680 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68666:68667 Imp <> c1 var
R68671:68672 Imp <> st var
R68677:68677 Imp <> s var
R68681:68683 Imp <> st' var
R68649:68651 Coq.Init.Logic <> :type_scope:x_'='_x not
R68639:68643 Imp BreakImp beval def
R68648:68648 Imp <> b var
R68645:68646 Imp <> st var
R68652:68655 Coq.Init.Datatypes <> true constr
R68764:68768 Imp BreakImp state def
R68776:68779 Imp BreakImp bexp ind
R68791:68793 Imp BreakImp com ind
R68801:68806 Imp BreakImp status ind
R68866:68866 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68891:68894 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68897:68900 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68902:68904 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68867:68870 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68872:68877 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68880:68885 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68888:68890 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R68871:68871 Imp <> b var
R68878:68879 Imp <> c1 var
R68886:68887 Imp <> c2 var
R68895:68896 Imp <> st var
R68901:68901 Imp <> s var
R68905:68907 Imp <> st' var
R68846:68848 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68851:68854 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68856:68858 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68844:68845 Imp <> c2 var
R68849:68850 Imp <> st var
R68855:68855 Imp <> s var
R68859:68861 Imp <> st' var
R68826:68828 Coq.Init.Logic <> :type_scope:x_'='_x not
R68816:68820 Imp BreakImp beval def
R68825:68825 Imp <> b var
R68822:68823 Imp <> st var
R68829:68833 Coq.Init.Datatypes <> false constr
R68942:68944 Imp BreakImp com ind
R68957:68961 Imp BreakImp state def
R68998:68998 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69007:69010 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69013:69016 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69023:69025 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69001:69004 Imp BreakImp ::x_';;'_x not
R68999:69000 Imp <> c1 var
R69005:69006 Imp <> c2 var
R69011:69012 Imp <> st var
R69017:69022 Imp BreakImp SBreak constr
R69026:69028 Imp <> st' var
R68973:68975 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68978:68981 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68988:68990 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R68971:68972 Imp <> c1 var
R68976:68977 Imp <> st var
R68982:68987 Imp BreakImp SBreak constr
R68991:68993 Imp <> st' var
R69082:69084 Imp BreakImp com ind
R69102:69106 Imp BreakImp state def
R69114:69119 Imp BreakImp status ind
R69183:69183 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69192:69195 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69198:69201 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69203:69205 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69186:69189 Imp BreakImp ::x_';;'_x not
R69184:69185 Imp <> c1 var
R69190:69191 Imp <> c2 var
R69196:69197 Imp <> st var
R69202:69202 Imp <> s var
R69206:69209 Imp <> st'' var
R69161:69163 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69167:69170 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69172:69174 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69159:69160 Imp <> c2 var
R69164:69166 Imp <> st' var
R69171:69171 Imp <> s var
R69175:69178 Imp <> st'' var
R69131:69133 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69136:69139 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69149:69151 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69129:69130 Imp <> c1 var
R69134:69135 Imp <> st var
R69140:69148 Imp BreakImp SContinue constr
R69152:69154 Imp <> st' var
R69240:69243 Imp BreakImp bexp ind
R69252:69256 Imp BreakImp state def
R69264:69266 Imp BreakImp com ind
R69298:69298 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69315:69318 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69321:69324 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69334:69336 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69299:69304 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69306:69309 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69311:69314 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69305:69305 Imp <> b var
R69310:69310 Imp <> c var
R69319:69320 Imp <> st var
R69325:69333 Imp BreakImp SContinue constr
R69337:69338 Imp <> st var
R69286:69288 Coq.Init.Logic <> :type_scope:x_'='_x not
R69276:69280 Imp BreakImp beval def
R69285:69285 Imp <> b var
R69282:69283 Imp <> st var
R69289:69293 Coq.Init.Datatypes <> false constr
R69381:69385 Imp BreakImp state def
R69393:69396 Imp BreakImp bexp ind
R69404:69406 Imp BreakImp com ind
R69475:69475 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69492:69495 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69498:69501 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69511:69513 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69476:69481 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69483:69486 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69488:69491 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69482:69482 Imp <> b var
R69487:69487 Imp <> c var
R69496:69497 Imp <> st var
R69502:69510 Imp BreakImp SContinue constr
R69514:69516 Imp <> st' var
R69444:69446 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69449:69452 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69459:69461 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69443:69443 Imp <> c var
R69447:69448 Imp <> st var
R69453:69458 Imp BreakImp SBreak constr
R69462:69464 Imp <> st' var
R69426:69428 Coq.Init.Logic <> :type_scope:x_'='_x not
R69416:69420 Imp BreakImp beval def
R69425:69425 Imp <> b var
R69422:69423 Imp <> st var
R69429:69432 Coq.Init.Datatypes <> true constr
R69566:69570 Imp BreakImp state def
R69578:69581 Imp BreakImp bexp ind
R69589:69591 Imp BreakImp com ind
R69717:69717 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69734:69737 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69740:69743 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69753:69755 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69718:69723 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69725:69728 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69730:69733 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69724:69724 Imp <> b var
R69729:69729 Imp <> c var
R69738:69739 Imp <> st var
R69744:69752 Imp BreakImp SContinue constr
R69756:69759 Imp <> st'' var
R69663:69663 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69680:69683 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69687:69690 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69700:69702 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69664:69669 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69671:69674 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69676:69679 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69670:69670 Imp <> b var
R69675:69675 Imp <> c var
R69684:69686 Imp <> st' var
R69691:69699 Imp BreakImp SContinue constr
R69703:69706 Imp <> st'' var
R69629:69631 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69634:69637 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69647:69649 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R69628:69628 Imp <> c var
R69632:69633 Imp <> st var
R69638:69646 Imp BreakImp SContinue constr
R69650:69652 Imp <> st' var
R69611:69613 Coq.Init.Logic <> :type_scope:x_'='_x not
R69601:69605 Imp BreakImp beval def
R69610:69610 Imp <> b var
R69607:69608 Imp <> st var
R69614:69617 Coq.Init.Datatypes <> true constr
R69800:69804 Imp BreakImp ceval ind
not 69769 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 70247:70258 BreakImp break_ignore
R70324:70326 Coq.Init.Logic <> :type_scope:x_'='_x not
R70322:70323 Imp <> st var
R70327:70329 Imp <> st' var
R70286:70286 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70296:70299 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70302:70305 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70307:70309 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70292:70294 Imp BreakImp ::x_';;'_x not
R70287:70291 Imp BreakImp ::'BREAK' not
R70295:70295 Imp <> c var
R70300:70301 Imp <> st var
R70306:70306 Imp <> s var
R70310:70312 Imp <> st' var
prf 70379:70392 BreakImp while_continue
R70460:70462 Coq.Init.Logic <> :type_scope:x_'='_x not
R70459:70459 Imp <> s var
R70463:70471 Imp BreakImp SContinue constr
R70419:70419 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70436:70439 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70442:70445 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70447:70449 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70420:70425 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70427:70430 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70432:70435 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70426:70426 Imp <> b var
R70431:70431 Imp <> c var
R70440:70441 Imp <> st var
R70446:70446 Imp <> s var
R70450:70452 Imp <> st' var
prf 70521:70540 BreakImp while_stops_on_break
R70616:70616 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70633:70636 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70639:70642 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70652:70654 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70617:70622 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70624:70627 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70629:70632 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70623:70623 Imp <> b var
R70628:70628 Imp <> c var
R70637:70638 Imp <> st var
R70643:70651 Imp BreakImp SContinue constr
R70655:70657 Imp <> st' var
R70589:70591 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70594:70597 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70604:70606 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70588:70588 Imp <> c var
R70592:70593 Imp <> st var
R70598:70603 Imp BreakImp SBreak constr
R70607:70609 Imp <> st' var
R70575:70577 Coq.Init.Logic <> :type_scope:x_'='_x not
R70565:70569 Imp BreakImp beval def
R70574:70574 Imp <> b var
R70571:70572 Imp <> st var
R70578:70581 Coq.Init.Datatypes <> true constr
prf 70777:70792 BreakImp while_break_true
R70889:70895 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R70900:70901 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R70903:70905 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70910:70913 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70920:70922 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70902:70902 Imp <> c var
R70906:70909 Imp <> st'' var
R70914:70919 Imp BreakImp SBreak constr
R70923:70925 Imp <> st' var
R70876:70878 Coq.Init.Logic <> :type_scope:x_'='_x not
R70865:70869 Imp BreakImp beval def
R70875:70875 Imp <> b var
R70871:70873 Imp <> st' var
R70879:70882 Coq.Init.Datatypes <> true constr
R70817:70817 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70834:70837 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70840:70843 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70853:70855 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70818:70823 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70825:70828 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70830:70833 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70824:70824 Imp <> b var
R70829:70829 Imp <> c var
R70838:70839 Imp <> st var
R70844:70852 Imp BreakImp SContinue constr
R70856:70858 Imp <> st' var
prf 71046:71064 BreakImp ceval_deterministic
R71077:71079 Imp BreakImp com ind
R71169:71172 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71163:71165 Coq.Init.Logic <> :type_scope:x_'='_x not
R71160:71162 Imp <> st1 var
R71166:71168 Imp <> st2 var
R71175:71177 Coq.Init.Logic <> :type_scope:x_'='_x not
R71173:71174 Imp <> s1 var
R71178:71179 Imp <> s2 var
R71134:71136 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71139:71142 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71145:71147 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71133:71133 Imp <> c var
R71137:71138 Imp <> st var
R71143:71144 Imp <> s2 var
R71148:71150 Imp <> st2 var
R71106:71108 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71111:71114 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71117:71119 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71105:71105 Imp <> c var
R71109:71110 Imp <> st var
R71115:71116 Imp <> s1 var
R71120:71122 Imp <> st1 var
R71225:71232 Imp BreakImp <> mod
